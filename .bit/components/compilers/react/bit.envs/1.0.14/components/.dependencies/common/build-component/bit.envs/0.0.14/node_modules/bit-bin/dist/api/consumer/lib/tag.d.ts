import semver from 'semver';
import { BitIds } from '../../../bit-id';
import Component from '../../../consumer/component';
import { AutoTagResult } from '../../../scope/component-ops/auto-tag';
export declare type TagResults = {
    taggedComponents: Component[];
    autoTaggedResults: AutoTagResult[];
    warnings: string[];
    newComponents: BitIds;
};
export declare function tagAction(args: {
    id: string;
    message: string;
    exactVersion: string | null | undefined;
    releaseType: semver.ReleaseType;
    force: boolean | null | undefined;
    verbose?: boolean;
    ignoreUnresolvedDependencies?: boolean;
    ignoreNewestVersion: boolean;
    skipTests: boolean;
    skipAutoTag: boolean;
}): Promise<TagResults>;
export declare function tagAllAction(args: {
    message: string;
    exactVersion?: string;
    releaseType: string;
    force?: boolean;
    verbose?: boolean;
    ignoreUnresolvedDependencies?: boolean;
    ignoreNewestVersion: boolean;
    skipTests: boolean;
    scope?: string;
    includeImported?: boolean;
    idWithWildcard?: string;
    skipAutoTag: boolean;
}): Promise<TagResults>;
