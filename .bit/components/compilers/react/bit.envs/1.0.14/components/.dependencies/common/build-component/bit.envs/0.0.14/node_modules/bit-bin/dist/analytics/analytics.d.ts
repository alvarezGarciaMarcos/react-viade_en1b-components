declare const LEVEL: {
    DEBUG: string;
    INFO: string;
    WARNING: string;
    ERROR: string;
    FATAL: string;
};
declare class Breadcrumb {
    category: string;
    message: string;
    data: Record<string, any>;
    constructor(category: string, message: string, data: Record<string, any>);
}
declare class Analytics {
    static username: string;
    static command: string;
    static release: string;
    static args: string[];
    static flags: Record<string, any>;
    static success: boolean;
    static nodeVersion: string;
    static os: string;
    static extra: Record<string, any> | null | undefined;
    static level: keyof typeof LEVEL;
    static error: Error | string | Record<string, any>;
    static breadcrumbs: Array<Breadcrumb>;
    static analytics_usage: boolean;
    static error_usage: boolean;
    static anonymous: boolean;
    static environment: string;
    static getID(): string;
    static promptAnalyticsIfNeeded(cmd: string): Promise<void>;
    static _maskString(str: string): string;
    static _hashLightly(value: any): any;
    static _hashFlags(flags: Record<string, any>): any;
    static _hashArgs(args: string[]): string[];
    static init(command: string, flags: Record<string, any>, args: string[], version: any): void;
    static sendData(): Promise<unknown>;
    static setError(level: string | undefined, err: Error): void;
    static setExtraData(key: any, value: any): void;
    static incExtraDataKey(key: any, value: any): void;
    static hashData(data: any): any;
    static addBreadCrumb(category: string, message: string, data?: Record<string, any>): void;
    static toObject(): {
        username: string;
        command: string;
        flags: Record<string, any>;
        args: string[];
        release: string;
        extra: Record<string, any> | null | undefined;
        nodeVersion: string;
        os: string;
        level: "DEBUG" | "INFO" | "WARNING" | "ERROR" | "FATAL";
        error: string | Error | Record<string, any>;
        success: boolean;
        breadcrumbs: Breadcrumb[];
        analytics_usage: boolean;
        error_usage: boolean;
        environment: string;
    };
}
export { LEVEL, Analytics };
