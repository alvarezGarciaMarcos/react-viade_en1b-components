export declare type HookAction = {
    name: string | null | undefined;
    run: Function[];
};
export declare type Hooks = {};
declare type HookFailures = {};
export default class HooksManager {
    hooks: Map<any, any>;
    constructor();
    static init(): void;
    static getInstance(): HooksManager;
    registerNewHook(hookName: string, context?: Object, throwIfExist?: boolean): boolean;
    registerActionToHook(hookName: string, hookAction: HookAction, context?: Object, throwIfNotExist?: boolean): boolean;
    triggerHook(hookName: string, args?: Object, headers?: Object, context?: Object): HookFailures[] | null | undefined;
}
export {};
