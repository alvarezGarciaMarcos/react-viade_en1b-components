"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _chalk() {
  const data = _interopRequireDefault(require("chalk"));

  _chalk = function () {
    return data;
  };

  return data;
}

function _command() {
  const data = _interopRequireDefault(require("../../command"));

  _command = function () {
    return data;
  };

  return data;
}

function _consumer() {
  const data = require("../../../api/consumer");

  _consumer = function () {
    return data;
  };

  return data;
}

class DependencyStatus extends _command().default {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2().default)(this, "name", 'dependency-status [mainFile...]');
    (0, _defineProperty2().default)(this, "private", true);
    (0, _defineProperty2().default)(this, "description", 'returns the status of the dependency status of bit map against bit dependencies');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "opts", []);
    (0, _defineProperty2().default)(this, "migration", true);
  }

  action([mainFile]) {
    const dependencyStatusProps = {
      mainFile
    };
    return (0, _consumer().dependencyStatus)(dependencyStatusProps);
  }

  report(dependencyStatusResult) {
    if (dependencyStatusResult.missingFiles.length === 0) {
      const output = _chalk().default.green('All files in dependency tree are marked as components');

      return output;
    }

    let output = _chalk().default.red('The following file exist in dependency tree but are not a component:\n');

    const files = dependencyStatusResult.missingFiles.map(missingFile => {
      const file = _chalk().default.bold(missingFile);

      return file;
    });
    output += files.join('\n');
    return output;
  }

}

exports.default = DependencyStatus;