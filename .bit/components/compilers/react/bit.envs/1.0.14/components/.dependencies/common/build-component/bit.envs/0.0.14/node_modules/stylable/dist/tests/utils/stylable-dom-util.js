"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var selector_utils_1 = require("../../src/selector-utils");
var StylableDOMUtil = /** @class */ (function () {
    function StylableDOMUtil(style, root) {
        this.style = style;
        this.root = root;
    }
    StylableDOMUtil.prototype.select = function (selector, element) {
        var el = (element || this.root);
        return el ? el.querySelector(this.scopeSelector(selector)) : null;
    };
    StylableDOMUtil.prototype.selectAll = function (selector, element) {
        var el = (element || this.root);
        return el ? Array.prototype.slice.call(el.querySelectorAll(this.scopeSelector(selector))) : [];
    };
    StylableDOMUtil.prototype.scopeSelector = function (selector) {
        var _this = this;
        if (!selector) {
            return this.scopeSelector('.root');
        }
        var ast = selector_utils_1.parseSelector(selector);
        selector_utils_1.traverseNode(ast, function (node) {
            if (node.type === 'class') {
                node.name = _this.style[node.name] || node.name;
            }
            else if (node.type === 'pseudo-class') {
                node.type = 'attribute';
                node.content = _this.getStateDataAttr(node.name);
            }
            else if (node.type === 'pseudo-element' ||
                node.type === 'element' ||
                node.type === 'nested-pseudo-class') {
                throw new Error("selector with " + node.type + " is not supported yet.");
            }
        });
        return selector_utils_1.stringifySelector(ast);
    };
    StylableDOMUtil.prototype.hasStyleState = function (element, stateName, param) {
        if (param === void 0) { param = true; }
        var _a = this.getStateDataAttrKey(stateName, param), stateKey = _a.stateKey, styleState = _a.styleState;
        var actual = element.getAttribute(stateKey);
        return String(styleState[stateKey]) === actual;
    };
    StylableDOMUtil.prototype.getStyleState = function (element, stateName) {
        var stateKey = this.getStateDataAttrKey(stateName).stateKey;
        return element.getAttribute(stateKey);
    };
    StylableDOMUtil.prototype.getStateDataAttrKey = function (state, param) {
        if (param === void 0) { param = true; }
        var styleState = this.style.$cssStates((_a = {}, _a[state] = param, _a));
        return { stateKey: Object.keys(styleState)[0], styleState: styleState };
        var _a;
    };
    StylableDOMUtil.prototype.getStateDataAttr = function (state, param) {
        if (param === void 0) { param = true; }
        var _a = this.getStateDataAttrKey(state, param), stateKey = _a.stateKey, styleState = _a.styleState;
        return stateKey + "=\"" + styleState[stateKey] + "\"";
    };
    return StylableDOMUtil;
}());
exports.StylableDOMUtil = StylableDOMUtil;
//# sourceMappingURL=stylable-dom-util.js.map