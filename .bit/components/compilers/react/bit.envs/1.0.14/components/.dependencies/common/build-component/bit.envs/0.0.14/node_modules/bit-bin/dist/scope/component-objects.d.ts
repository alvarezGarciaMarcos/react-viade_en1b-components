/// <reference types="node" />
import BitObject from './objects/object';
import Repository from './objects/repository';
import ModelComponent from './models/model-component';
export default class ComponentObjects {
    component: Buffer;
    objects: Buffer[];
    constructor(component: Buffer, objects: Buffer[]);
    toString(): string;
    getParsedComponent(): BitObject;
    static fromString(str: string): ComponentObjects;
    static manyToString(componentsAndObjects: Array<{
        component: Buffer;
        objects: Buffer[];
    }>): string;
    static manyFromString(str: string): ComponentObjects[];
    static fromObject(object: Record<string, any>): ComponentObjects;
    toObjects(repo: Repository): {
        component: ModelComponent;
        objects: BitObject[];
    };
    toObjectsAsync(repo: Repository): Promise<{
        component: ModelComponent;
        objects: BitObject[];
    }>;
}
