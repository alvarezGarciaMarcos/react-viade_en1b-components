import AbstractConfig from './abstract-config';
import { Extensions, Compilers, Testers } from './abstract-config';
import { ResolveModulesConfig } from '../component/dependencies/dependency-resolver/types/dependency-tree-type';
import { PathOsBasedAbsolute } from '../../utils/path';
import ConsumerOverrides from './consumer-overrides';
export declare type WorkspaceConfigProps = {
    compiler?: string | Compilers;
    tester?: string | Testers;
    saveDependenciesAsComponents?: boolean;
    lang?: string;
    distTarget?: string | null | undefined;
    distEntry?: string | null | undefined;
    componentsDefaultDirectory?: string;
    dependenciesDirectory?: string;
    ejectedEnvsDirectory?: string;
    bindingPrefix?: string;
    extensions?: Extensions;
    packageManager?: 'npm' | 'yarn';
    packageManagerArgs?: string[];
    packageManagerProcessOptions?: Record<string, any>;
    useWorkspaces?: boolean;
    manageWorkspaces?: boolean;
    resolveModules?: ResolveModulesConfig;
    defaultScope?: string;
    overrides?: ConsumerOverrides;
};
export default class WorkspaceConfig extends AbstractConfig {
    distTarget: string | null | undefined;
    distEntry: string | null | undefined;
    componentsDefaultDirectory: string;
    dependenciesDirectory: string;
    ejectedEnvsDirectory: string;
    saveDependenciesAsComponents: boolean;
    packageManager: 'npm' | 'yarn';
    packageManagerArgs: string[] | null | undefined;
    packageManagerProcessOptions: Record<string, any> | null | undefined;
    useWorkspaces: boolean;
    manageWorkspaces: boolean;
    resolveModules: ResolveModulesConfig | null | undefined;
    overrides: ConsumerOverrides;
    packageJsonObject: Record<string, any> | null | undefined;
    defaultScope: string | null | undefined;
    constructor({ compiler, tester, saveDependenciesAsComponents, lang, distTarget, distEntry, componentsDefaultDirectory, dependenciesDirectory, ejectedEnvsDirectory, bindingPrefix, extensions, packageManager, packageManagerArgs, packageManagerProcessOptions, useWorkspaces, manageWorkspaces, resolveModules, defaultScope, overrides }: WorkspaceConfigProps);
    toPlainObject(): any;
    static create(workspaceConfigProps: WorkspaceConfigProps): WorkspaceConfig;
    static ensure(dirPath: PathOsBasedAbsolute, standAlone: boolean, workspaceConfigProps?: WorkspaceConfigProps): Promise<WorkspaceConfig>;
    static reset(dirPath: PathOsBasedAbsolute, resetHard: boolean): Promise<void>;
    static fromPlainObject(object: Record<string, any>): WorkspaceConfig;
    static load(dirPath: string): Promise<WorkspaceConfig>;
    static loadBitJson(bitJsonPath: string): Promise<Record<string, any> | null | undefined>;
    static loadPackageJson(packageJsonPath: string): Promise<Record<string, any> | null | undefined>;
    static validate(object: Record<string, any>): void;
}
