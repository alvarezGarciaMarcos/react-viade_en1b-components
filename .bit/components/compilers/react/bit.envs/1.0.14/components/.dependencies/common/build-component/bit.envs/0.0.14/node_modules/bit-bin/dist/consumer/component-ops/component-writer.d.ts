import Component from '../component/consumer-component';
import ComponentMap from '../bit-map/component-map';
import { ComponentOrigin } from '../bit-map/component-map';
import Consumer from '../consumer';
import { PathOsBasedRelative } from '../../utils/path';
import BitMap from '../bit-map/bit-map';
import ConfigDir from '../bit-map/config-dir';
import PackageJsonFile from '../component/package-json-file';
export declare type ComponentWriterProps = {
    component: Component;
    writeToPath: PathOsBasedRelative;
    writeConfig?: boolean;
    configDir?: string;
    writePackageJson?: boolean;
    override?: boolean;
    isolated?: boolean;
    origin: ComponentOrigin;
    consumer: Consumer | null | undefined;
    bitMap: BitMap;
    writeBitDependencies?: boolean;
    deleteBitDirContent?: boolean;
    existingComponentMap?: ComponentMap;
    excludeRegistryPrefix?: boolean;
};
export default class ComponentWriter {
    component: Component;
    writeToPath: PathOsBasedRelative;
    writeConfig: boolean;
    configDir: string | null | undefined;
    writePackageJson: boolean;
    override: boolean;
    isolated: boolean | null | undefined;
    origin: ComponentOrigin;
    consumer: Consumer | null | undefined;
    bitMap: BitMap;
    writeBitDependencies: boolean;
    deleteBitDirContent: boolean | null | undefined;
    existingComponentMap: ComponentMap | null | undefined;
    excludeRegistryPrefix: boolean;
    constructor({ component, writeToPath, writeConfig, configDir, writePackageJson, override, isolated, origin, consumer, bitMap, writeBitDependencies, deleteBitDirContent, existingComponentMap, excludeRegistryPrefix }: ComponentWriterProps);
    static getInstance(componentWriterProps: ComponentWriterProps): ComponentWriter;
    write(): Promise<Component>;
    populateComponentsFilesToWrite(): Promise<Record<string, any>>;
    populateFilesToWriteToComponentDir(): Promise<void>;
    addComponentToBitMap(rootDir: string | null | undefined): ComponentMap;
    _populateEnvFilesIfNeeded(): Promise<void>;
    _mergePackageJsonPropsFromOverrides(packageJson: PackageJsonFile): void;
    _mergeChangedPackageJsonProps(packageJson: PackageJsonFile): void;
    _replaceDistPathTemplateWithCalculatedDistPath(packageJson: PackageJsonFile): Record<string, any>;
    _copyFilesIntoDistsWhenDistsOutsideComponentDir(): void;
    _updateComponentRootPathAccordingToBitMap(): void;
    _updateBitMapIfNeeded(): void;
    _updateConsumerConfigIfNeeded(): Promise<void>;
    _determineWhetherToWriteConfig(): void;
    _determineWhetherToWritePackageJson(): void;
    _handlePreviouslyNestedCurrentlyImportedCase(): Promise<void>;
    _determineWhetherToDeleteComponentDirContent(): void;
    _updateFilesBasePaths(): void;
    _cleanOldNestedComponent(): Promise<void>;
    _removeNodeModulesLinksFromDependents(): Promise<void>;
    _getConfigDir(): string | ConfigDir;
    _getNextPatchVersion(): any;
}
