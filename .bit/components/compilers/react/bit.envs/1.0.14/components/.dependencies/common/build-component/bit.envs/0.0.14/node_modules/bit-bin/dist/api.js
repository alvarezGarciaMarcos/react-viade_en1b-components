"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.show = show;
exports.list = list;
exports.buildOne = buildOne;
exports.buildAll = buildAll;
exports.addMany = addMany;
exports.loadExtension = loadExtension;

function _bluebird() {
  const data = require("bluebird");

  _bluebird = function () {
    return data;
  };

  return data;
}

function _index() {
  const data = require("./api/consumer/index");

  _index = function () {
    return data;
  };

  return data;
}

function _index2() {
  const data = require("./api/scope/index");

  _index2 = function () {
    return data;
  };

  return data;
}

function _extension() {
  const data = _interopRequireDefault(require("./extensions/extension"));

  _extension = function () {
    return data;
  };

  return data;
}

function _hooks() {
  const data = _interopRequireDefault(require("./hooks"));

  _hooks = function () {
    return data;
  };

  return data;
}

_hooks().default.init();

function show(scopePath, id, opts) {
  // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
  return (0, _index().getScopeComponent)({
    scopePath,
    id,
    allVersions: opts && opts.versions
  }).then(({
    component
  }) => {
    if (Array.isArray(component)) {
      return component.map(v => v.toObject());
    }

    return component.toObject();
  });
}

function list(scopePath) {
  return (0, _index2().scopeList)(scopePath).then(listScopeResult => listScopeResult.map(result => result.id.toString()));
}

function buildOne(_x) {
  return _buildOne.apply(this, arguments);
}

function _buildOne() {
  _buildOne = (0, _bluebird().coroutine)(function* (id, noCache = false, verbose = false, workspaceDir) {
    return (0, _index().build)(id, noCache, verbose, workspaceDir);
  });
  return _buildOne.apply(this, arguments);
}

function buildAll(_x2) {
  return _buildAll.apply(this, arguments);
}

function _buildAll() {
  _buildAll = (0, _bluebird().coroutine)(function* (id, noCache = false, verbose = false) {
    return (0, _index().buildAll)(noCache, verbose);
  });
  return _buildAll.apply(this, arguments);
}

function addMany(_x3, _x4) {
  return _addMany.apply(this, arguments);
}
/**
 * Load extension programmatically
 */


function _addMany() {
  _addMany = (0, _bluebird().coroutine)(function* (components, alternateCwd) {
    return (0, _index().addMany)(components, alternateCwd);
  });
  return _addMany.apply(this, arguments);
}

function loadExtension(_x5) {
  return _loadExtension.apply(this, arguments);
}

function _loadExtension() {
  _loadExtension = (0, _bluebird().coroutine)(function* (args) {
    const extension = yield _extension().default.load(args);
    return Promise.resolve(extension);
  });
  return _loadExtension.apply(this, arguments);
}