/// <reference types="node" />
import { BitObject } from '.';
export default class BitRawObject {
    headers: string[];
    type: string;
    content: Buffer;
    parsedContent: any;
    types: {
        [key: string]: Function;
    };
    _ref: string;
    constructor(buffer: Buffer, ref: string | null | undefined, types: {
        [key: string]: Function;
    } | null | undefined, type: string | null | undefined, content: Buffer | null | undefined, parsedContent: any | null | undefined);
    getParsedContent(): any;
    getString(pretty: boolean): string | Buffer;
    ref: string;
    readonly id: string;
    refs(): string[];
    static fromDeflatedBuffer(fileContents: Buffer, ref: string | null | undefined, types: {
        [key: string]: Function;
    } | null | undefined): Promise<BitObject>;
    toRealObject(): any;
    clone(): any;
}
