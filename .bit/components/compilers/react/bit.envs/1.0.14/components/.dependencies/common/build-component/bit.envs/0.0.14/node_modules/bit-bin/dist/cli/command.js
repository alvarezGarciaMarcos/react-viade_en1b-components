"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

class Cmd {
  constructor() {
    (0, _defineProperty2().default)(this, "name", void 0);
    (0, _defineProperty2().default)(this, "description", void 0);
    (0, _defineProperty2().default)(this, "alias", void 0);
    (0, _defineProperty2().default)(this, "opts", void 0);
    (0, _defineProperty2().default)(this, "commands", []);
    (0, _defineProperty2().default)(this, "private", void 0);
    (0, _defineProperty2().default)(this, "loader", void 0);
    (0, _defineProperty2().default)(this, "skipWorkspace", void 0);
    (0, _defineProperty2().default)(this, "remoteOp", void 0);
  }

  // Used for adding the token option globally
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  action(params, opts, packageManagerArgs) {
    console.log('"action" method not implemented on this command'); // eslint-disable-line no-console

    return new Promise(resolve => resolve({}));
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars


  report(data, params, opts) {
    return '"report" method not implemented on this command';
  }

  handleError() {
    return null;
  }

  splitList(val) {
    return val.split(',');
  }

}

exports.default = Cmd;