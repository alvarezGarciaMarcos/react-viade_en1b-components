"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.forkComponentsPrompt = exports.errorReportingPrompt = exports.analyticsPrompt = exports.resolveConflictPrompt = exports.removePrompt = exports.userpass = exports.passphrase = void 0;

function _passphrase() {
  const data = _interopRequireDefault(require("./schemas/passphrase"));

  _passphrase = function () {
    return data;
  };

  return data;
}

function _userPassword() {
  const data = _interopRequireDefault(require("./schemas/user-password"));

  _userPassword = function () {
    return data;
  };

  return data;
}

function _remoteRemove() {
  const data = _interopRequireDefault(require("./schemas/remote-remove"));

  _remoteRemove = function () {
    return data;
  };

  return data;
}

function _resolveConflict() {
  const data = _interopRequireDefault(require("./schemas/resolve-conflict"));

  _resolveConflict = function () {
    return data;
  };

  return data;
}

function _analyticsReporting() {
  const data = _interopRequireDefault(require("./schemas/analytics-reporting"));

  _analyticsReporting = function () {
    return data;
  };

  return data;
}

function _errorReporting() {
  const data = _interopRequireDefault(require("./schemas/error-reporting"));

  _errorReporting = function () {
    return data;
  };

  return data;
}

function _forkComponents() {
  const data = _interopRequireDefault(require("./schemas/fork-components"));

  _forkComponents = function () {
    return data;
  };

  return data;
}

function _prompt() {
  const data = _interopRequireDefault(require("./prompt"));

  _prompt = function () {
    return data;
  };

  return data;
}

const passphrase = (0, _prompt().default)(_passphrase().default);
exports.passphrase = passphrase;
const userpass = (0, _prompt().default)(_userPassword().default);
exports.userpass = userpass;
const removePrompt = (0, _prompt().default)(_remoteRemove().default);
exports.removePrompt = removePrompt;
const resolveConflictPrompt = (0, _prompt().default)(_resolveConflict().default);
exports.resolveConflictPrompt = resolveConflictPrompt;
const analyticsPrompt = (0, _prompt().default)(_analyticsReporting().default);
exports.analyticsPrompt = analyticsPrompt;
const errorReportingPrompt = (0, _prompt().default)(_errorReporting().default);
exports.errorReportingPrompt = errorReportingPrompt;

const forkComponentsPrompt = (bitIds, remote) => (0, _prompt().default)((0, _forkComponents().default)(bitIds, remote));

exports.forkComponentsPrompt = forkComponentsPrompt;