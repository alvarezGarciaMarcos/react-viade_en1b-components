import Component from '../../component';
import { Consumer } from '../..';
import { SourceFile } from '../../component/sources';
import { PathLinux } from '../../../utils/path';
import { Version } from '../../../scope/models';
import { SourceFileModel } from '../../../scope/models/version';
export declare type MergeResultsThreeWay = {
    addFiles: Array<{
        filePath: PathLinux;
        fsFile: SourceFile;
    }>;
    modifiedFiles: Array<{
        filePath: PathLinux;
        fsFile: SourceFile;
        baseFile: SourceFileModel;
        currentFile: SourceFileModel;
        output: string | null | undefined;
        conflict: string | null | undefined;
    }>;
    unModifiedFiles: Array<{
        filePath: PathLinux;
        fsFile: SourceFile;
    }>;
    overrideFiles: Array<{
        filePath: PathLinux;
        fsFile: SourceFile;
    }>;
    hasConflicts: boolean;
};
declare const _default: ({ consumer, otherComponent, otherVersion, currentComponent, currentVersion, baseComponent }: {
    consumer: Consumer;
    otherComponent: Component;
    otherVersion: string;
    currentComponent: Version;
    currentVersion: string;
    baseComponent: Version;
}) => Promise<MergeResultsThreeWay>;
export default _default;
