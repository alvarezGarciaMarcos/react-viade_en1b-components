"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var postcss = require("postcss");
var stylable_value_parsers_1 = require("../src/stylable-value-parsers");
var parseMixin = function (mixinValue) {
    return stylable_value_parsers_1.SBTypesParsers[stylable_value_parsers_1.valueMapping.mixin](postcss.decl({ value: mixinValue }), function () { return 'named'; });
};
describe('stylable-value-parsers', function () {
    it('named arguments with no params', function () {
        chai_1.expect(parseMixin('Button')).to.eql([{ type: 'Button', options: {} }]);
    });
    it('named arguments with empty params', function () {
        chai_1.expect(parseMixin('Button()')).to.eql([{ type: 'Button', options: {} }]);
    });
    it('named arguments with one simple param', function () {
        chai_1.expect(parseMixin('Button(color 1px)')).to.eql([{ type: 'Button', options: { color: '1px' } }]);
    });
    it('named arguments with two simple params', function () {
        chai_1.expect(parseMixin('Button(color 1px, color2 2px)')).to.eql([{
                type: 'Button',
                options: { color: '1px', color2: '2px' }
            }]);
    });
    it('named arguments with one param with spaces', function () {
        chai_1.expect(parseMixin('Button(color 1px solid red)')).to.eql([{
                type: 'Button',
                options: { color: '1px solid red' }
            }]);
    });
});
//# sourceMappingURL=stylable-value-parsers.spec.js.map