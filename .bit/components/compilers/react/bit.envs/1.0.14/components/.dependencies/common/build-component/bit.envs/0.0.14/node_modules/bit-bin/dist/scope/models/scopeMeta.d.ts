/// <reference types="node" />
import BitObject from '../objects/object';
import Ref from '../objects/ref';
declare type ScopeMetaProps = {
    name: string;
    license: string;
};
export default class ScopeMeta extends BitObject {
    license: string | null | undefined;
    name: string;
    constructor(props: ScopeMetaProps);
    toObject(): Record<string, any>;
    toString(pretty: boolean): string;
    id(): string;
    toBuffer(pretty: any): Buffer;
    static fromScopeName(name: string): Ref;
    static parse(propsStr: string | Buffer): ScopeMeta;
    static fromObject(props: ScopeMetaProps): ScopeMeta;
    static from(props: ScopeMetaProps): ScopeMeta;
}
export {};
