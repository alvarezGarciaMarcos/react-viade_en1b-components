"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureAndWriteJson = ensureAndWriteJson;
exports.generateRandomStr = generateRandomStr;
Object.defineProperty(exports, "VERSION_DELIMITER", {
  enumerable: true,
  get: function () {
    return _constants().VERSION_DELIMITER;
  }
});
exports.FileStatusWithoutChalk = exports.default = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _ramda() {
  const data = _interopRequireDefault(require("ramda"));

  _ramda = function () {
    return data;
  };

  return data;
}

function _fsExtra() {
  const data = _interopRequireDefault(require("fs-extra"));

  _fsExtra = function () {
    return data;
  };

  return data;
}

function _constants() {
  const data = require("../constants");

  _constants = function () {
    return data;
  };

  return data;
}

function _utils() {
  const data = require("../utils");

  _utils = function () {
    return data;
  };

  return data;
}

function _mergeVersion() {
  const data = require("../consumer/versions-ops/merge-version");

  _mergeVersion = function () {
    return data;
  };

  return data;
}

function _e2eScopes() {
  const data = _interopRequireDefault(require("./e2e-scopes"));

  _e2eScopes = function () {
    return data;
  };

  return data;
}

function _e2eBitJsonHelper() {
  const data = _interopRequireDefault(require("./e2e-bit-json-helper"));

  _e2eBitJsonHelper = function () {
    return data;
  };

  return data;
}

function _e2eFsHelper() {
  const data = _interopRequireDefault(require("./e2e-fs-helper"));

  _e2eFsHelper = function () {
    return data;
  };

  return data;
}

function _e2eCommandHelper() {
  const data = _interopRequireDefault(require("./e2e-command-helper"));

  _e2eCommandHelper = function () {
    return data;
  };

  return data;
}

function _e2eConfigHelper() {
  const data = _interopRequireDefault(require("./e2e-config-helper"));

  _e2eConfigHelper = function () {
    return data;
  };

  return data;
}

function _e2eBitmapHelper() {
  const data = _interopRequireDefault(require("./e2e-bitmap-helper"));

  _e2eBitmapHelper = function () {
    return data;
  };

  return data;
}

function _e2eEnvHelper() {
  const data = _interopRequireDefault(require("./e2e-env-helper"));

  _e2eEnvHelper = function () {
    return data;
  };

  return data;
}

function _e2eExtensionsHelper() {
  const data = _interopRequireDefault(require("./e2e-extensions-helper"));

  _e2eExtensionsHelper = function () {
    return data;
  };

  return data;
}

function _e2eFixturesHelper() {
  const data = _interopRequireDefault(require("./e2e-fixtures-helper"));

  _e2eFixturesHelper = function () {
    return data;
  };

  return data;
}

function _e2eGeneralHelper() {
  const data = _interopRequireDefault(require("./e2e-general-helper"));

  _e2eGeneralHelper = function () {
    return data;
  };

  return data;
}

function _e2eNpmHelper() {
  const data = _interopRequireDefault(require("./e2e-npm-helper"));

  _e2eNpmHelper = function () {
    return data;
  };

  return data;
}

function _e2ePackageJsonHelper() {
  const data = _interopRequireDefault(require("./e2e-package-json-helper"));

  _e2ePackageJsonHelper = function () {
    return data;
  };

  return data;
}

function _e2eScopeHelper() {
  const data = _interopRequireDefault(require("./e2e-scope-helper"));

  _e2eScopeHelper = function () {
    return data;
  };

  return data;
}

function _e2eGitHelper() {
  const data = _interopRequireDefault(require("./e2e-git-helper"));

  _e2eGitHelper = function () {
    return data;
  };

  return data;
}

class Helper {
  constructor() {
    (0, _defineProperty2().default)(this, "debugMode", void 0);
    (0, _defineProperty2().default)(this, "scopes", void 0);
    (0, _defineProperty2().default)(this, "bitJson", void 0);
    (0, _defineProperty2().default)(this, "fs", void 0);
    (0, _defineProperty2().default)(this, "command", void 0);
    (0, _defineProperty2().default)(this, "config", void 0);
    (0, _defineProperty2().default)(this, "bitMap", void 0);
    (0, _defineProperty2().default)(this, "env", void 0);
    (0, _defineProperty2().default)(this, "extensions", void 0);
    (0, _defineProperty2().default)(this, "fixtures", void 0);
    (0, _defineProperty2().default)(this, "general", void 0);
    (0, _defineProperty2().default)(this, "npm", void 0);
    (0, _defineProperty2().default)(this, "packageJson", void 0);
    (0, _defineProperty2().default)(this, "scopeHelper", void 0);
    (0, _defineProperty2().default)(this, "git", void 0);
    this.debugMode = !!process.env.npm_config_debug; // default = false

    this.scopes = new (_e2eScopes().default)(); // generates dirs and scope names

    this.bitJson = new (_e2eBitJsonHelper().default)(this.scopes);
    this.packageJson = new (_e2ePackageJsonHelper().default)(this.scopes);
    this.fs = new (_e2eFsHelper().default)(this.scopes);
    this.command = new (_e2eCommandHelper().default)(this.scopes, this.debugMode);
    this.bitMap = new (_e2eBitmapHelper().default)(this.scopes, this.fs);
    this.config = new (_e2eConfigHelper().default)(this.command);
    this.npm = new (_e2eNpmHelper().default)(this.scopes, this.fs, this.command);
    this.scopeHelper = new (_e2eScopeHelper().default)(this.debugMode, this.scopes, this.command, this.fs);
    this.git = new (_e2eGitHelper().default)(this.scopes, this.command, this.scopeHelper);
    this.fixtures = new (_e2eFixturesHelper().default)(this.fs, this.command, this.npm, this.scopes, this.debugMode);
    this.extensions = new (_e2eExtensionsHelper().default)(this.scopes, this.command, this.bitJson, this.scopeHelper, this.fixtures);
    this.env = new (_e2eEnvHelper().default)(this.command, this.fs, this.scopes, this.scopeHelper, this.fixtures);
    this.general = new (_e2eGeneralHelper().default)(this.scopes, this.npm, this.command);
  }

}

exports.default = Helper;

function ensureAndWriteJson(filePath, fileContent) {
  _fsExtra().default.ensureFileSync(filePath);

  _fsExtra().default.writeJsonSync(filePath, fileContent, {
    spaces: 2
  });
} // eslint-disable-next-line import/prefer-default-export


const FileStatusWithoutChalk = _ramda().default.fromPairs(Object.keys(_mergeVersion().FileStatus).map(status => [status, (0, _utils().removeChalkCharacters)(_mergeVersion().FileStatus[status])]));

exports.FileStatusWithoutChalk = FileStatusWithoutChalk;

function generateRandomStr(size = 8) {
  return Math.random().toString(36).slice(size * -1).replace('.', ''); // it's rare but possible that the first char is '.', which is invalid for a scope-name
}