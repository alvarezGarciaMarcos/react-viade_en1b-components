"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _child_process() {
  const data = require("child_process");

  _child_process = function () {
    return data;
  };

  return data;
}

function path() {
  const data = _interopRequireWildcard(require("path"));

  path = function () {
    return data;
  };

  return data;
}

function globalConfig() {
  const data = _interopRequireWildcard(require("../../api/consumer/lib/global-config"));

  globalConfig = function () {
    return data;
  };

  return data;
}

function _constants() {
  const data = require("../../constants");

  _constants = function () {
    return data;
  };

  return data;
}

function defaultCIFunc(id, scopePath) {
  const child = (0, _child_process().spawn)(process.argv[0], [path().join(__dirname, 'ci-worker.js')], {
    detached: true,
    cwd: scopePath,
    env: {
      __id__: id,
      __scope__: scopePath
    },
    stdio: ['ignore', 'ignore', 'ignore']
  });
  child.unref();
}

var _default = (component, scopePath) => {
  const enableCI = globalConfig().getSync(_constants().CFG_CI_ENABLE_KEY);
  const ciFuncPath = globalConfig().getSync(_constants().CFG_CI_FUNCTION_PATH_KEY);
  if (enableCI !== 'true' && !ciFuncPath) return component;
  const id = component.id.toString();
  let ciFunc;
  if (!ciFuncPath) ciFunc = defaultCIFunc;else {
    // eslint-disable-next-line import/no-dynamic-require, global-require
    ciFunc = require(ciFuncPath);
  }
  ciFunc(id, scopePath);
  return component;
};

exports.default = _default;