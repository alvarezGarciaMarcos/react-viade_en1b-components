"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var runtime_1 = require("../../src/runtime");
var stylable_dom_util_1 = require("./stylable-dom-util");
describe('stylable-dom-utils', function () {
    var s = runtime_1.create('root', 'ns', { root: 'ns-root', x: 'ns--x', y: 'ns--y' }, null, '0');
    var util = new stylable_dom_util_1.StylableDOMUtil(s);
    it('scopeSelector defaults to root', function () {
        chai_1.expect(util.scopeSelector()).to.equal(".ns-root");
    });
    it('scopeSelector local class', function () {
        chai_1.expect(util.scopeSelector('.x')).to.equal(".ns--x");
    });
    it('scopeSelector handle multiple local classes', function () {
        chai_1.expect(util.scopeSelector('.x .y')).to.equal(".ns--x .ns--y");
    });
    it('scopeSelector Error("pseudo-element")', function () {
        chai_1.expect(function () { return util.scopeSelector('.x::y'); }).to.throw('selector with pseudo-element is not supported yet.');
    });
    it('scopeSelector Error("element")', function () {
        chai_1.expect(function () { return util.scopeSelector('x'); }).to.throw('selector with element is not supported yet.');
    });
    it('scopeSelector handle local states', function () {
        chai_1.expect(util.scopeSelector('.x:loading')).to.equal(".ns--x[data-ns-loading=\"true\"]");
    });
    it('scopeSelector handle class local states (multiple)', function () {
        chai_1.expect(util.scopeSelector('.x:loading:thinking')).to.equal(".ns--x[data-ns-loading=\"true\"][data-ns-thinking=\"true\"]");
    });
    describe('Style state', function () {
        it('hasStyleState properly calls getAttribute with the requested style state', function () {
            var state = '';
            var getAttribute = function (styleState) {
                state = styleState;
                return 'true';
            };
            chai_1.expect(util.hasStyleState({ getAttribute: getAttribute }, 'loading')).to.equal(true);
            chai_1.expect(state).to.equal('data-ns-loading');
        });
        it('getStyleState properly calls getAttribute with the requested style state', function () {
            var state = '';
            var getAttribute = function (styleState) {
                state = styleState;
                return 'true';
            };
            chai_1.expect(util.getStyleState({ getAttribute: getAttribute }, 'loading')).to.equal('true');
            chai_1.expect(state).to.equal('data-ns-loading');
        });
    });
});
//# sourceMappingURL=stylable-dom-util.spec.js.map