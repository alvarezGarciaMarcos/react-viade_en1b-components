import { BitId } from '../../bit-id';
import { Consumer } from '..';
import { SourceFile } from '../component/sources';
import { MergeStrategy, ApplyVersionResults } from './merge-version';
import { MergeResultsThreeWay } from './merge-version/three-way-merge';
export declare type CheckoutProps = {
    version?: string;
    ids?: BitId[];
    latestVersion?: boolean;
    promptMergeOptions: boolean;
    mergeStrategy: MergeStrategy | null | undefined;
    verbose: boolean;
    skipNpmInstall: boolean;
    reset: boolean;
    all: boolean;
    ignoreDist: boolean;
};
declare const _default: (consumer: Consumer, checkoutProps: CheckoutProps) => Promise<ApplyVersionResults>;
export default _default;
export declare function applyModifiedVersion(componentFiles: SourceFile[], mergeResults: MergeResultsThreeWay, mergeStrategy: MergeStrategy | null | undefined, sharedDir?: string): Record<string, any>;
