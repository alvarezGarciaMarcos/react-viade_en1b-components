import ScopesData from './e2e-scopes';
export default class BitJsonHelper {
    scopes: ScopesData;
    constructor(scopes: ScopesData);
    read(bitJsonDir?: string): any;
    write(bitJson: Record<string, any>, bitJsonDir?: string): void;
    addKeyVal(bitJsonDir: string | undefined, key: string, val: any): void;
    addOverrides(overrides: Record<string, any>): void;
    getEnvByType(bitJson: Record<string, any>, envType: 'compiler' | 'tester'): any;
    addFileToEnv(bitJsonPath: string | undefined, fileName: string, filePath: string, envType: 'compiler' | 'tester'): void;
    addToRawConfigOfEnv(bitJsonPath: string | undefined, key: string, val: string, envType: 'compiler' | 'tester'): void;
    manageWorkspaces(withWorkspaces?: boolean): void;
    setComponentsDir(content: string): void;
    corrupt(bitJsonPath?: string): void;
    modifyField(key: string, value: string): void;
    _getEnvNameByType(bitJson: Record<string, any>, envType: 'compiler' | 'tester'): string;
    _addKeyValToEnvProp(bitJsonDir: string | undefined, propName: string, key: string, val: string, envType: 'compiler' | 'tester'): void;
}
